networks:
  marketeer: {}

services:
  db:
    networks: [marketeer]
    container_name: &db-host marketeer-db
    image: postgres:16
    environment:
      POSTGRES_DB: marketeer
      POSTGRES_PASSWORD: &db-password ${POSTGRES_PASSWORD:-se11A11DaTh1n95}
      POSTGRES_USER: &db-user ${POSTGRES_USER:-marketeer}

  db-init:
    networks: [marketeer]
    container_name: marketeer-db-init
    image: "marketeer:latest"
    volumes:
      - ./:/src
    environment:
      WAIT_FOR_AFTER_COMMAND: /src/scripts/db-init.sh
      WAIT_FOR_HOST: *db-host
      WAIT_FOR_PORT: 5432
    working_dir: /src
    command: [ "scripts/wait-for-port-up.sh" ]

  grafana:
    networks: [marketeer]
    container_name: marketeer-grafana
    image: grafana/grafana:latest
    volumes:
      - ./observability/grafana/provisioning:/etc/grafana/provisioning
      - "grafana-storage:/var/lib/grafana"
    environment:
      - GF_LOG_LEVEL=warn
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_NAME=Main Org.
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    ports:
      - "3002:3000"
    depends_on:
      prometheus-init:
        condition: service_completed_successfully

  marketeer:
    networks: [marketeer]
    container_name: marketeer
    build:
      context: .
      dockerfile: Dockerfile
    image: "marketeer:latest"
    volumes:
      - ./:/src:rw
    environment:
      EBAY_APP_ID: ${EBAY_APP_ID:-oops}
      POSTGRES_PASSWORD: *db-password
      POSTGRES_USER: *db-user
      SKIP_TESTS: ${SKIP_TESTS:-true}
    working_dir: /src
    command: [
      "gunicorn", "-c", "gunicorn_config.py", "app.main:app", "--bind", "0.0.0.0:8000"
    ]
    ports:
      - "8002:8000"
    healthcheck:
      test: ["CMD", "curl", "-s", "localhost:8000/healthz"]
      interval: 10s
      timeout: 9s
      retries: 6

  prometheus:
    networks: [marketeer]
    image: prom/prometheus:latest
    container_name: &prometheus-host marketeer-prometheus
    ports:
      - "9092:9090"
    volumes:
      - ./observability/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --log.level=warn

  prometheus-init:
    networks: [marketeer]
    container_name: marketeer-prometheus-init
    image: "marketeer:latest"
    volumes:
      - ./:/src
    environment:
      WAIT_FOR_HOST: *prometheus-host
      WAIT_FOR_PORT: 9090  # Because check is from inside container network
    working_dir: /src
    command: [ "scripts/wait-for-port-up.sh" ]

volumes:
  grafana-storage: {}
